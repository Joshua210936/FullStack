<head>
    <link rel="stylesheet" href="css/Schedule.css">
</head>


<div class="schedule-open-house-page">
  <div class="agent-and-calendar-container">
    <div class="agent-info">
      <img src="images/agent1.jpg" alt="Kwang Alan" class="agent-image">
      <div class="agent-details">
        <h3>Kwang Alan</h3>
        <p>ERA REALTY NETWORK PTE LTD</p>
      </div>
    </div>
    <div class="calendar-section">
      <div class="calendar-header">
        <button class="nav-button" id="prevMonth">&#8592;</button>
        <div class="month-display" id="monthDisplay">May 2024</div>
        <button class="nav-button" id="nextMonth">&#8594;</button>
      </div>
      <div class="calendar-ui" id="calendar">
        </div>
      <div class="time-slots">
        <button class="time-slot">09:00 AM</button>
        <button class="time-slot">10:00 AM</button>
        <button class="time-slot">11:00 AM</button>
        <button class="time-slot">12:00 PM</button>
        <button class="confirm-button">Confirm Appointment</button>
      </div>
    </div>
  </div>
</div>


  <script>
    document.addEventListener('DOMContentLoaded', () => {
        const monthDisplay = document.getElementById('monthDisplay');
        const calendar = document.getElementById('calendar');
        const prevMonthButton = document.getElementById('prevMonth');
        const nextMonthButton = document.getElementById('nextMonth');
        let selectedDate = null;

        let currentDate = new Date();

        function generateCalendar(date) {
            const year = date.getFullYear();
            const month = date.getMonth();
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const daysInMonth = lastDay.getDate();

            const firstDayOfWeek = firstDay.getDay();
            const lastDayOfWeek = lastDay.getDay();

            const prevMonthDays = firstDayOfWeek;
            const nextMonthDays = 6 - lastDayOfWeek;

            const totalCells = prevMonthDays + daysInMonth + nextMonthDays;

            let calendarHTML = '<table class="calendar-table">';
            calendarHTML += '<tr><th>Sun</th><th>Mon</th><th>Tue</th><th>Wed</th><th>Thu</th><th>Fri</th><th>Sat</th></tr>';
            calendarHTML += '<tr>';

            let dayCounter = 1;
            for (let i = 0; i < totalCells; i++) {
                if (i < prevMonthDays || dayCounter > daysInMonth) {
                    calendarHTML += '<td></td>';
                } else {
                    const cellDate = new Date(year, month, dayCounter);
                    const isSelected = selectedDate && cellDate.toDateString() === selectedDate.toDateString();
                    calendarHTML += `<td class="calendar-cell ${isSelected ? 'selected' : ''}" data-date="${cellDate.toISOString()}">${dayCounter}</td>`;
                    dayCounter++;
                }

                if ((i + 1) % 7 === 0) {
                    calendarHTML += '</tr><tr>';
                }
            }

            calendarHTML += '</tr></table>';
            calendar.innerHTML = calendarHTML;
            monthDisplay.textContent = `${date.toLocaleString('default', { month: 'long' })} ${year}`;
        }

        prevMonthButton.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            generateCalendar(currentDate);
        });

        nextMonthButton.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            generateCalendar(currentDate);
        });

        calendar.addEventListener('click', (event) => {
            const target = event.target;
            if (target.classList.contains('calendar-cell')) {
                const selectedCell = calendar.querySelector('.selected');
                if (selectedCell) {
                    selectedCell.classList.remove('selected');
                }
                selectedDate = new Date(target.dataset.date);
                target.classList.add('selected');
            }
        });

        generateCalendar(currentDate);
    });
</script>

