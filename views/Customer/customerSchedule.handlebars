<head>
    <link rel="stylesheet" href="/css/customerSchedule.css">
    <title>Appointments for Customer</title>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
   <a href="/"><img src="../../images/logo.png" width="100" height="50"></a>
    <div class="header collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <div class="dropdown" data-dropdown>
                    <button class="nav-link" data-dropdown-button>Properties &#x25BE;</button>
                    <div class="dropdown-menu information-grid">
                        <div>
                            <div class="dropdown-links">
                                <a href="/buyHouse" class="nav-link">Buying</a>
                                <a href="/sellHouse" class="nav-link">Selling</a>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
            <li class="nav-item">
                <div class="dropdown" data-dropdown>
                    <button class="nav-link" data-dropdown-button>Property Agents &#x25BE;</button>
                    <div class="dropdown-menu information-grid">
                        <div>
                            <div class="dropdown-links">
                                <a href="/findAgents" class="nav-link">Find Agents</a>
                                <a href="/schedule" class="nav-link">Schedule</a>
                                <a href="/agentListProperty" class="nav-link">List Property</a>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
            <li class="nav-item">
                <div class="dropdown" data-dropdown>
                    <button class="nav-link" data-dropdown-button><a href="/contactUs" class="link-button">Contact Us</a></button>
                </div>
            </li>
            <li class="nav-item">
                <button class="nav-link" data-dropdown-button><a href="/aboutUs" class="link-button">About Us </a></button>
            </li>
        </ul>
    </div>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <!-- Profile Dropdown -->
    <div class="dropdown" data-dropdown>
        <button class="nav-link material-symbols-outlined" data-dropdown-button >Profile &#x25BE; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </button>
        <div class="dropdown-menu information-grid">
            <div>
                <div class="dropdown-links user-dropdown">
                    <a href="/userSetProfile/{{this.customer_id}}" class="nav-link">User Settings</a>
                    <a href="/schedule" class="nav-link">Schedule</a>
                    <a href="/savedItems" class="nav-link">Saved Items</a>
                    <a href="/logout" class="nav-link">Log Out</a>
                </div>
            </div>
        </div>
    </div>
</nav>
    <h1>Appointments for Customer ID: {{customerId}}</h1>

    <table>
    <thead>
        <tr>
            <th>Agent Name</th>
            <th>Agent Email</th>
            <th>Property Description</th>
            <th>Property Price</th>
            <th>Property Address</th>
            <th>Date Selected</th>
            <th>Time Selected</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        {{#each schedules}}
        <tr>
            <td>{{agent.agent_firstName}} {{agent.agent_lastName}}</td>
            <td>{{agent.agent_email}}</td>
            <td>{{listed_property.Property_Description}}</td>
            <td>{{listed_property.Property_Price}}</td>
            <td>{{listed_property.Property_Address}}</td>
            <td>{{date_selected}}</td>
            <td>{{time_selected}}</td>
            <td>
                <button class="edit-btn" data-id="{{schedule_id}}">Edit</button>
                 <button class="delete-btn" data-id="{{schedule_id}}">Delete</button>
            </td>
        </tr>
        {{/each}}
    </tbody>
</table>
<!-- Edit Modal -->
<div id="editModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Edit Schedule</h2>
        <form id="editForm">
            <input type="hidden" id="schedule_id" name="schedule_id">
            <label for="date_selected">Date Selected:</label>
            <input type="date" id="date_selected" name="date_selected" required>
            <label for="time_selected">Time Selected:</label>
            <select id="time_selected" name="time_selected" required>
                <option value="09:00">09:00 AM</option>
                <option value="10:00">10:00 AM</option>
                <option value="11:00">11:00 AM</option>
                <option value="12:00">12:00 PM</option>
            </select>
            <button type="submit">Save Changes</button>
        </form>
    </div>
</div>
</body>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('editModal');
    const closeBtn = document.querySelector('.modal .close');
    const editBtns = document.querySelectorAll('.edit-btn');
    const deleteBtns = document.querySelectorAll('.delete-btn');

    // Handle edit button clicks
    editBtns.forEach(btn => {
        btn.addEventListener('click', async (e) => {
            const scheduleId = e.target.dataset.id;
            try {
                const response = await fetch(`/schedule/${scheduleId}`);
                const data = await response.json();

                if (response.ok) {
                    document.getElementById('schedule_id').value = data.schedule_id;
                    document.getElementById('date_selected').value = data.date_selected;
                    document.getElementById('time_selected').value = data.time_selected;
                    modal.style.display = 'block';
                } else {
                    alert('Error fetching schedule details.');
                }
            } catch (error) {
                console.error('Error fetching schedule details:', error);
                alert('Error fetching schedule details.');
            }
        });
    });

    // Handle delete button clicks
    deleteBtns.forEach(btn => {
        btn.addEventListener('click', async (e) => {
            const scheduleId = e.target.dataset.id;
            const confirmed = confirm('Are you sure you want to delete this schedule?');

            if (confirmed) {
                try {
                    const response = await fetch(`/schedule/${scheduleId}`, {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        alert('Schedule deleted successfully!');
                        location.reload(); // Reload to see changes
                    } else {
                        alert('Error deleting schedule.');
                    }
                } catch (error) {
                    console.error('Error deleting schedule:', error);
                    alert('Error deleting schedule.');
                }
            }
        });
    });

    closeBtn.addEventListener('click', () => {
        modal.style.display = 'none';
    });

    window.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.style.display = 'none';
        }
    });

    document.getElementById('editForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);
        try {
            const response = await fetch(`/schedule/${formData.get('schedule_id')}`, {
                method: 'PUT',
                body: new URLSearchParams(formData)
            });

            if (response.ok) {
                alert('Schedule updated successfully!');
                modal.style.display = 'none';
                location.reload(); // Reload to see changes
            } else {
                alert('Error updating schedule.');
            }
        } catch (error) {
            console.error('Error updating schedule:', error);
            alert('Error updating schedule.');
        }
    });
});

</script>


    

