<head>
    <link rel="stylesheet" href="/css/customerSchedule.css">
    <title>Appointments for Customer</title>
</head>
<body>
    <div class="container">
        <aside class="sidebar">
            <div class="profile-section">
                <h2>{{customer.Customer_fName}} {{customer.Customer_lName}}</h2>
            </div>
            <nav class="sidebar-nav">
                <ul>
                    <li><a href="/userSetProfile/{{customer.Customer_id}}">My Profile</a></li>
                    <li><a href="#">Reset Password</a></li>
                    <li><a href="/customer/appointments">Appointments</a></li>
                </ul>
            </nav>
        </aside>
        <main class="main-content">
            <h1>Appointments for: {{customerName}}</h1>
            <table>
                <thead>
                    <tr>
                        <th>Agent Name</th>
                        <th>Agent Email</th>
                        <th>Property Name</th>
                        <th>Property Address</th>
                        <th>Date Selected</th>
                        <th>Time Selected</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each schedules}}
                    <tr>
                        <td>{{agent.agent_firstName}} {{agent.agent_lastName}}</td>
                        <td>{{agent.agent_email}}</td>
                        <td>{{listed_property.Property_Name}}</td>
                        <td>{{listed_property.Property_Address}}</td>
                        <td>{{date_selected}}</td>
                        <td>{{time_selected}}</td>
                        <td>
                            <button class="edit-btn" data-id="{{schedule_id}}">Edit</button>
                            <button class="delete-btn" data-id="{{schedule_id}}">Delete</button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>

            <!-- Edit Modal -->
            <div id="editModal" class="modal">
                <div class="modal-content">
                    <span class="close">&times;</span>
                    <h2>Edit Schedule</h2>
                    <form id="editForm">
                        <input type="hidden" id="schedule_id" name="schedule_id">
                        <label for="date_selected">Date Selected:</label>
                        <input type="date" id="date_selected" name="date_selected" required>
                        <label for="time_selected">Time Selected:</label>
                <input type="time" id="time_selected" name="time_selected" required>
                        <button type="submit">Save Changes</button>
                    </form>
                </div>
            </div>
        </main>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const modal = document.getElementById('editModal');
        const closeBtn = document.querySelector('.modal .close');
        const editBtns = document.querySelectorAll('.edit-btn');
        const deleteBtns = document.querySelectorAll('.delete-btn');

        // Handle edit button clicks
        editBtns.forEach(btn => {
            btn.addEventListener('click', async (e) => {
                const scheduleId = e.target.dataset.id;
                try {
                    const response = await fetch(`/schedule/${scheduleId}`);
                    const data = await response.json();

                    if (response.ok) {
                        document.getElementById('schedule_id').value = data.schedule_id;
                        document.getElementById('date_selected').value = data.date_selected;
                        document.getElementById('time_selected').value = data.time_selected;
                        modal.style.display = 'block';
                    } else {
                        alert('Error fetching schedule details.');
                    }
                } catch (error) {
                    console.error('Error fetching schedule details:', error);
                    alert('Error fetching schedule details.');
                }
            });
        });

        // Handle delete button clicks
        deleteBtns.forEach(btn => {
            btn.addEventListener('click', async (e) => {
                const scheduleId = e.target.dataset.id;
                const confirmed = confirm('Are you sure you want to delete this schedule?');

                if (confirmed) {
                    try {
                        const response = await fetch(`/schedule/${scheduleId}`, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            alert('Schedule deleted successfully!');
                            location.reload(); // Reload to see changes
                        } else {
                            alert('Error deleting schedule.');
                        }
                    } catch (error) {
                        console.error('Error deleting schedule:', error);
                        alert('Error deleting schedule.');
                    }
                }
            });
        });

        closeBtn.addEventListener('click', () => {
            modal.style.display = 'none';
        });

        window.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.style.display = 'none';
            }
        });

        document.getElementById('editForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            try {
                const response = await fetch(`/schedule/${formData.get('schedule_id')}`, {
                    method: 'PUT',
                    body: new URLSearchParams(formData)
                });

                if (response.ok) {
                    alert('Schedule updated successfully!');
                    modal.style.display = 'none';
                    location.reload(); // Reload to see changes
                } else {
                    alert('Error updating schedule.');
                }
            } catch (error) {
                console.error('Error updating schedule:', error);
                alert('Error updating schedule.');
            }
        });
    });
    </script>
</body>
